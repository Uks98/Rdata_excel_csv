1
df_midwest <- as.data.frame(ggplot2::midwest)
#분석 실습
df_midwest <- as.data.frame(ggplot2::midwest)
df_midwest
df_midwest <- df_midwest2
df_midwest <- rename(total = df_midwest$poptotal, asian = df_midwest$popasian)
df_midwest
df_midwest <- rename(df_midwest,total = df_midwest$poptotal, asian = df_midwest$popasian)
df_midwest <- df_midwest2
df_midwest <- rename(df_midwest,total = df_midwest$poptotal, asian = df_midwest$popasian)
df_midwest
head(df_midwest,3)
df_midwest <- rename(df_midwest,total =poptotal, asian = popasian)
head(df_midwest,3)
library(dplyr)
# 변수명을 변경하기 위한 패키지 설치
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
df_midwest <- df_midwest2
df_midwest <- rename(df_midwest,total =poptotal, asian = popasian)
head(df_midwest,3)
df_midwest$asia_mean = df_midwest$asian / df_midwest$total * 100
df_midwest
head(df_midwest)
head(df_midwest$asia_mean)
hist(df_midwest$asia_mean)
mean(df_midwest$asia_mean)
summary(df_midwest)
summary(df_midwest$asia_mean)
#
summary(df_midwest$asia_mean)
mean(df_midwest$asia_mean)
df_midwest$df_asia <- ifelse(df_midwest$asia_mean >= 0.48, "large","small")
head(df_midwest)
qplot(df_midwest$df_asia)
?qplot
library("ggplot2")
qplot(df_midwest$df_asia)
df_m = as.data.frame(ggplot2::midwest)
df_m
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
df_m<-rename(df_m, total = df_m$poptotal, asian = df_m$popasian)
df_m<-rename(df_m, total = df_m$poptotal, asian = df_m$popasian)
df_m
df_m<-rename(df_m, total =poptotal, asian =popasian)
head(df_m)
df_m
df_m$asia_mean <- (df_m$total/df_m$asian) * 100
df_m$asia_mean
df_m$asia_mean <- (df_m$asian/df_m$total) * 100
df_m$asia_mean
table(df_m$asia_mean)
mean(df_m$asia_mean)
df_m$large_small <- ifelse(df_m$asia_mean >= 0.48, "large","small")
install.packages("dplyr")
install.packages("dplyr")
library("dplyr")
exam <- read.csv("csv_exam.txt")
exam
#조건에 맞는 행 출력하기
exam %>% filter(calss == 1)
exam
#조건에 맞는 행 출력하기
exam %>% filter(calss == 1)
#조건에 맞는 행 출력하기
# dplyr은 파이프 연산자 사용해서 함수를 나열한다 ctrl + shift + M이 단축키다.
exam %>% filter(calss == 1)
exam
#조건에 맞는 행 출력하기
# dplyr은 파이프 연산자 사용해서 함수를 나열한다 ctrl + shift + M이 단축키다.
exam %>% filter(class == 1)
exam %>% filter(englist >= 50)
exam %>% filter(english >= 50)
exam %>% filter(english <= 50)
exam %>% file(class == 2)
exam %>% filter(class == 2)
exam %>% filter(class != 2)
#수학 점수가 50점 미만인 사람
exam %>% filter(math >= 50)
#수학 점수가 50점 미만인 사람
exam %>% filter(math < 50)
#영어점수가 80점인 사람
exam %>% filter(english >= 80)
#1반이면서 수학점수가 50점 이상인 경우
exam %>%  filter(class == 1 & math >= 50)
#2반이면서 영어점수가 80점 이상인 사람
exam %>% filter(class == 2, english >= 80)
exam %>% filter(english >= 80 | math >= 90)
exam %>% filter(class == 1 | class == 3 | class == 5)
class1 = exam %>% filter(class == 1 )
class1
class1$math
mean(class1$math)
#배기량이 4이하인 자동차와 5이상인 자동차 중 어떤 자동차의 고속도로 연비가 평균적으로 더 높은지 알아보자
mpg = as.data.frame(ggplot2::mpg)
mpg
mpg_displ
mpg_displ <- mpg %>% filter(mpg$displ <= 4 $ mpg$displ >= 5)
mpg_displ
mpg_displ <- mpg %>% filter(mpg$displ <= 4 & mpg$displ >= 5)
mpg_displ
mpg_displ <- mpg %>% filter(mpg$displ <= 4 & mpg$displ >= 5)
mpg_displ
mpg <- mpg_org
#배기량이 4이하인 자동차와 5이상인 자동차 중 어떤 자동차의 고속도로 연비가 평균적으로 더 높은지 알아보자
mpg_org = as.data.frame(ggplot2::mpg)
mpg <- mpg_org
mpg_org
mpg <- mpg_org
mpg <- mpg_org
mpg_displ <- mpg %>% filter(mpg$displ <= 4 & mpg$displ >= 5)
mpg_displ
mpg_displ <- mpg_org %>% filter(mpg_org$displ <= 4 & mpg_org$displ >= 5)
mpg_displ
mpg_displ <- mpg_org %>% filter(mpg_org$displ <= 4 & mpg_org$displ >= 5)
mpg_displ
mpg_displ <- mpg_org %>% filter(displ <= 4 & displ >= 5)
mpg_displ
mpg_displ <- mpg_org %>% filter(displ <= 4)
mpg_displ
mpg_displ <- mpg %>% filter(displ <= 4)
mpg_displ
mpg_displ_5 <- mpg %>% filter(displ >= 5)
mean(mpg_displ_4)
mean(mpg_displ_4)
mean(mpg_displ_4)
mean(mpg_displ_4)
mean(mpg_displ_4)
head(mpg_displ_4)
head(mpg_displ_4)
mpg_displ_4 <- mpg %>% filter(displ <= 4)
mpg_displ_5 <- mpg %>% filter(displ >= 5)
head(mpg_displ_4)
mean(mpg_displ_5$hwy)
mean(mpg_displ_4$hwy)
mean(mpg_displ_5$hwy)
mp1
mp <- as.data.frame(ggplot2::mpg)
mp1 <- mp
mp1
mp1 %>% filter(manufacturer == "audi")
toyota_man <- mp1 %>% filter(manufacturer == "toyota")
mean(audi_man)
mean(audi_man$cty)
audi_man
mp <- as.data.frame(ggplot2::mpg)
mp1 <- mp
audi_man< - mp1 %>% filter(manufacturer == "audi")
toyota_man <- mp1 %>% filter(manufacturer == "toyota")
audi_man
mean(audi_man$cty)
mean(toyota_man)
mean(audi_man$cty)
audi_man<- mp1 %>% filter(manufacturer == "audi")
toyota_man <- mp1 %>% filter(manufacturer == "toyota")
audi_man
mean(audi_man$cty)
mean(toyota_man)
mean(audi_man$cty)
mean(toyota_man$cty)
mpg_mean <- mpg %>% filter(manufacturer %in% c("chevorlet","ford","honda"))
mpg_mean
mpg_mean <- mpg %>% filter(manufacturer %in% c("chevrolet","ford","honda"))
mpg_mean
mean(mpg_mean$hwy)
exam %>% select(math)
#여러 변수 추출하기
exam %>% select(calss,math,english)
#여러 변수 추출하기
exam %>% select(class,math,english)
#변수 제외하기
exam %>% select(-math)
#변수 제외하기
exam %>% select(-math,-class)
exam %>% filter(class == 1) %>% select(english)
exam %>%
filter(class == 1) %>%
select(english)
#데이터 일부만 추출하기
exam %>%
select(id,math) %>%
head
#데이터 일부만 추출하기
exam %>%
select(id,math) %>%
str
#데이터 일부만 추출하기
exam %>%
select(id,math) %>%
dim
#데이터 일부만 추출하기
exam %>%
select(id,math) %>%
str
#데이터 일부만 추출하기
exam %>%
select(id,math) %>%
summary
#데이터 일부만 추출하기
exam %>%
select(id,math) %>%
tail
#데이터 일부만 추출하기
exam %>%
select(id,math) %>%
head
#데이터 일부만 추출하기
exam %>%
select(id,math) %>%
head
#데이터 일부만 추출하기
exam %>%
select(id,math) %>%
head
install.packages("dplyr")
library("dplyr")
#데이터 일부만 추출하기
exam %>%
select(id,math) %>%
head
source("C:/R3/rso22/p126_data.R", echo=TRUE)
a
#데이터 일부만 추출하기
exam %>%
select(id,math) %>%
head
#데이터 일부만 추출하기
exam %>%
select(id,math) %>%
head
#데이터 일부만 추출하기
exam %>%
select(id,math) %>%
head
#데이터 일부만 추출하기
exam %>%
select(id,math) %>%
head
#데이터 일부만 추출하기
exam %>%
select(id,math) %>%
head
# file 파라미터에 파일명
write.csv(df_modterm, file = "df_midterm.csv")
source("C:/R3/rso22/p89_paste_excel_csv.R", echo=TRUE)
source("C:/R3/rso22/p89_paste_excel_csv.R", echo=TRUE)
library("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library("dplyr")
mpg_cl_cty <- select(class,cty)
mpg_cl_cty <- mpg %>% select(class,cty)
mpg_cl_cty
head
#실습
mpg_cl <- mpg %>% select(class)
mpg_cty <- mpg %>% select(cty)
head
mpg_cty <- mpg %>% select(cty)
head(mpg_cl)
#실습
mpg_cl <- mpg %>% select(class,cty)
head(mpg_cl)
head()
mpg_cl %>%
filter(class = "suv" & class = "compact") %>%
mpg_cl %>%
filter(class = "suv") %>%
select(cty)
mpg_cl %>%
filter(class == "suv" & class == "compact") %>%
select(cty)
mpg_cl %>%
filter(class == "suv" & class == "compact") %>%
select(cty)
mpg_cl %>%
filter(class == "suv") %>%
select(cty)
mpg_cl %>%
filter(class == "suv","compact") %>%
select(cty)
mpg_cl %>%
filter(class == "suv","compact") %>%
select(cty)
& class == "compact"
& class == "compact"
mpg_cl_mean <- mpg_cl %>%
filter(class == "suv") %>%
select(cty)
head()
mean(mpg_cl_mean)
mpg_cl_mean <- mpg_cl %>%
filter(class == "suv") %>%
select(cty)
head()
mean(mpg_cl_mean)
mean(mpg_cl_mean$cty)
mpg_suv_mean <- mpg_cl %>%
filter(class == "suv") %>%
select(cty)
head()
mean(mpg_cl_mean$cty)
mpg_compact_mean <- mpg_cl %>%
filter(class == "suv") %>%
select(cty)
mean(mpg_cl_mean$cty)
mean(mpg_compact_mean$cty)
mpg_compact_mean <- mpg_cl %>%
filter(class == "compact") %>%
select(cty)
head()
mean(mpg_cl_mean$cty)
mean(mpg_compact_mean$cty)
mpg_compact_mean <- mpg_cl %>%
filter(class == "compact") %>%
head()
mean(mpg_cl_mean$cty)
mean(mpg_compact_mean$cty)
mean(mpg_compact_mean$cty)
exam %>% arrange(math)
exam %>% arrange(math)
library("dplyr")
exam %>% arrange(math)
#내림차순 정렬
exam %>% arrange(desc(math))
#여러 항목 정렬
exam %>% arrange(desc(math,class))
#여러 항목 정렬
exam %>% arrange(desc(class))
#여러 항목 정렬
exam %>% arrange(desc(class,math))
#여러 항목 정렬
exam %>% arrange(class,math))
#여러 항목 정렬
exam %>% arrange(class,math)
audy_hwy
audi_hwy <- mpg %>% filter(hwy)
audy_hwy
audi_hwy <- mpg %>% filter(class == "mpg")
audy_hwy
audi_hwy <- mpg %>% filter(class == "mpg")
audy_hwy
audi_hwy <- mpg %>% filter(class == "audi")
audy_hwy
audi_hwy <- mpg %>% filter(class == "audi")
audy_hwy
library("ggplot2")
audi_hwy <- mpg %>% filter(class == "audi")
audy_hwy
audi_hwy <- mpg %>% filter(class == "audi")
audy_hwy
#여러 항목 정렬
exam %>% arrange(class,math)
audi_hwy <- mpg %>% filter(class == "audi")
audy_hwy
audi_hwy
audi_hwy <- mpg %>% filter(class == "audi")
audi_hwy
audi_hwy <- mpg %>% filter(manufacturer == "audi")
audi_hwy
head(5)
audi_hwy <- mpg %>% filter(manufacturer == "audi") %>%
select(hwy)
audi_hwy <- mpg %>% filter(manufacturer == "audi") %>%
select(hwy)
audi_hwy <- mpg %>% filter(manufacturer == "audi") %>%
select(audi_hwy$hwy)
head(5)
head(5)
audi_hwy <- mpg %>% filter(manufacturer == "audi") %>%
select(audi_hwy$hwy)
audi_hwy <- mpg %>% filter(manufacturer == "audi") %>%
select(audi_hwy$hwy)
audi_hwy <- mpg %>% filter(manufacturer == "audi") %>%
select(audi_hwy$hwy)
audi_hwy <- mpg %>% filter(manufacturer == "audi") %>%
arrange(audi_hwy$hwy)
audi_hwy <- mpg %>% filter(manufacturer == "audi") %>%
arrange(audi_hwy$hwy)
audi_hwy <- mpg %>% filter(manufacturer == "audi") %>%
select(audi_hwy$hwy)
head(3)
audi_hwy <- mpg %>% filter(manufacturer == "audi") %>%
select(audi_hwy$hwy)
arrange(audi_hwy$hwy)
audi_hwy <- mpg %>% filter(manufacturer == "audi")
arrange(audi_hwy$hwy)
audi_hwy %>% arrange(audi_hwy$hwy)
audi_hwy %>% arrange(desc(audi_hwy$hwy)
audi_hwy %>% arrange(desc(audi_hwy$hwy))
audi_hwy <- mpg %>% filter(manufacturer == "audi")
audi_hwy %>% arrange(desc(audi_hwy$hwy))
audi_hwy %>% arrange(desc(audi_hwy$hwy)) %>% head(5)
audi_hwy <- mpg %>% filter(manufacturer == "audi") %>% arrange(desc(audi_hwy$hwy)) %>% head(5)
audi_hwy
audi_hwy <- mpg %>% filter(manufacturer == "audi") %>% arrange(desc(audi_hwy$hwy)) %>% head(5)
audi_hwy <- mpg %>% filter(manufacturer == "audi") %>% arrange(desc(audi_hwy$hwy)) %>% head(5)
audi_hwy <- mpg %>% filter(manufacturer == "audi") %>% arrange(desc(audi_hwy$hwy)) %>% head(5)
audi_hwy <- mpg %>% filter(manufacturer == "audi") %>% arrange(desc(audi_hwy$hwy)) %>% head(5)
5
%>% arrange(desc(audi_hwy$hwy)) %>% head(5)
%>% arrange(desc(audi_hwy$hwy)) %>% head(5)
audi_hwy <- mpg %>% filter(manufacturer == "audi") %>% arrange(desc(audi_hwy$hwy)) %>% head(5)
audi_hwy %>% arrange(desc(audi_hwy$hwy)) %>% head(5)
audi_hwy %>% arrange(desc(audi_hwy$hwy)) %>% head(5)
audi_hwy <- mpg %>% filter(manufacturer == "audi") %>% arrange(desc(audi_hwy$hwy)) %>% head(5)
audi_hwy <- mpg %>% filter(manufacturer == "audi")
audi_hwy %>% arrange(desc(audi_hwy$hwy)) %>% head(5)
